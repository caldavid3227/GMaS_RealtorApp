"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const utils_1 = require("./utils");
const config_1 = require("../config/config");
exports.default = {
    getInstallPackagesCommand,
    getInstallPackageCommand
};
function getInstallPackagesCommand(packageManager = null) {
    let command = getCommand(packageManager);
    let params = [];
    switch (command) {
        case 'npm':
            params = ['install'];
            break;
        case 'pnpm':
            params = ['install'];
            break;
        case 'yarn':
            params = ['--no-lockfile'];
            break;
    }
    return {
        command,
        params
    };
}
function getInstallPackageCommand(packageName, isDevDependency, packageManager) {
    let command = getCommand(packageManager);
    let params = [];
    switch (command) {
        case 'npm':
            params = ['install', packageName, '--save', '--save-exact'];
            break;
        case 'pnpm':
            params = ['install', packageName, '--save', '--save-exact', '--no-lock'];
            break;
        case 'yarn':
            params = ['add', packageName, '--no-lockfile', '--exact'];
            break;
    }
    if (isDevDependency) {
        params.push('-D'); //the same for all managers
    }
    return {
        command,
        params
    };
}
function getCommand(packageManager) {
    if (!packageManager)
        packageManager = config_1.default.packageManager;
    let commands = packageManager ? [packageManager] : config_1.packageManagers;
    return utils_1.default.findGlobalCommandByPrecedence(commands);
}
//# sourceMappingURL=packagesHelper.js.map